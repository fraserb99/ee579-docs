{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EE579 Group 4 Documentation # This site provides documentation to allow integration with our API and MQTT Broker. Read the Getting Started docs if you would like information on how to integrate your IoT device with our system. System Overview # Admin Interface # Our admin interface is available here: https://www.ee579-group4.net . This site enables users to login and configure rules, devices, and device groups. Our system is multi-tenant, with users able to create multiple tenants and invite other users. Rules and devices are then scoped to these tenants, meaning users only have permission to access and edit resources belonging one of their tenants. API # Our API is written in C# using ASP.NET Core. Full Swagger OpenAPI documentation is available here: https://ee579-dev-api.azurewebsites.net MQTT Broker # We are using Azure IoT Hub as our MQTT Broker. Information on connecting and recieving/publishing messages can be found here","title":"Home"},{"location":"#ee579-group-4-documentation","text":"This site provides documentation to allow integration with our API and MQTT Broker. Read the Getting Started docs if you would like information on how to integrate your IoT device with our system.","title":"EE579 Group 4 Documentation"},{"location":"#system-overview","text":"","title":"System Overview"},{"location":"#admin-interface","text":"Our admin interface is available here: https://www.ee579-group4.net . This site enables users to login and configure rules, devices, and device groups. Our system is multi-tenant, with users able to create multiple tenants and invite other users. Rules and devices are then scoped to these tenants, meaning users only have permission to access and edit resources belonging one of their tenants.","title":"Admin Interface"},{"location":"#api","text":"Our API is written in C# using ASP.NET Core. Full Swagger OpenAPI documentation is available here: https://ee579-dev-api.azurewebsites.net","title":"API"},{"location":"#mqtt-broker","text":"We are using Azure IoT Hub as our MQTT Broker. Information on connecting and recieving/publishing messages can be found here","title":"MQTT Broker"},{"location":"admin-interface/","text":"Admin Interface #","title":"Admin Interface"},{"location":"admin-interface/#admin-interface","text":"","title":"Admin Interface"},{"location":"getting-started/","text":"Getting Started # Requirements #","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#requirements","text":"","title":"Requirements"},{"location":"mqtt/","text":"MQTT Broker # Connecting #","title":"Connecting to the broker"},{"location":"mqtt/#mqtt-broker","text":"","title":"MQTT Broker"},{"location":"mqtt/#connecting","text":"","title":"Connecting"},{"location":"register-device/","text":"Getting Started # Registering a device # In order for your device to connect to IoT Hub, it must first retreive credentials. This can be done by sending a POST request to /devices/register . This will register your device with our system and return credentials to allow connection over MQTT. The device should make this request when first powered on, but the same endpoint can be used even if a device is already registered in the system. This accounts for situations where the device may have lost it's credentials, and allows the device to make the request every time it powers on, if desired. Request Format # Example Body # { \"deviceId\": \"<string>\" } Parameters # deviceId : This should be a unique identifier. A MAC adress is recommended, but it can take any form - guid, uuid, etc. Response Format # Example Body # { \"host\": \"IFTTT-Iot-Hub.azure-devices.net\", \"port\": 8883, \"topic\": \"devices/{deviceId}/messages/devicebound/#\", \"password\": \"SharedAccessSignature sr=IFTTT-Iot-Hub.azure-devices.net%2Fdevices%2F{deviceId}&sig=KOYS9LgCJ9eH7TTlMIGvedxIVI3cXmha7uU6yB4Bs6M%3D&se=88018657115\" } Parameters # host : The MQTT broker url port : The port the MQTT broker is listening on topic : The topic that the device should subscribe to, to receive cloud-to-device messages password : The password that should be used when connecting to the broker, in the form of a SAS token Debugging # It may be neccessary to make this request on a computer, rather than IoT device when debugging. The API Swagger Docs can be used to make this request and provides a prefilled request body. Any other method of making HTTP requests can also be used - cURL, Postman , etc. Next Steps # Connecting to the broker","title":"Registering a Device"},{"location":"register-device/#getting-started","text":"","title":"Getting Started"},{"location":"register-device/#registering-a-device","text":"In order for your device to connect to IoT Hub, it must first retreive credentials. This can be done by sending a POST request to /devices/register . This will register your device with our system and return credentials to allow connection over MQTT. The device should make this request when first powered on, but the same endpoint can be used even if a device is already registered in the system. This accounts for situations where the device may have lost it's credentials, and allows the device to make the request every time it powers on, if desired.","title":"Registering a device"},{"location":"register-device/#request-format","text":"","title":"Request Format"},{"location":"register-device/#example-body","text":"{ \"deviceId\": \"<string>\" }","title":"Example Body"},{"location":"register-device/#parameters","text":"deviceId : This should be a unique identifier. A MAC adress is recommended, but it can take any form - guid, uuid, etc.","title":"Parameters"},{"location":"register-device/#response-format","text":"","title":"Response Format"},{"location":"register-device/#example-body_1","text":"{ \"host\": \"IFTTT-Iot-Hub.azure-devices.net\", \"port\": 8883, \"topic\": \"devices/{deviceId}/messages/devicebound/#\", \"password\": \"SharedAccessSignature sr=IFTTT-Iot-Hub.azure-devices.net%2Fdevices%2F{deviceId}&sig=KOYS9LgCJ9eH7TTlMIGvedxIVI3cXmha7uU6yB4Bs6M%3D&se=88018657115\" }","title":"Example Body"},{"location":"register-device/#parameters_1","text":"host : The MQTT broker url port : The port the MQTT broker is listening on topic : The topic that the device should subscribe to, to receive cloud-to-device messages password : The password that should be used when connecting to the broker, in the form of a SAS token","title":"Parameters"},{"location":"register-device/#debugging","text":"It may be neccessary to make this request on a computer, rather than IoT device when debugging. The API Swagger Docs can be used to make this request and provides a prefilled request body. Any other method of making HTTP requests can also be used - cURL, Postman , etc.","title":"Debugging"},{"location":"register-device/#next-steps","text":"Connecting to the broker","title":"Next Steps"}]}